\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Apr 22 14:51:50 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=4000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Sat Apr 22 14:51:50 CEST 2017
name=challenge2.Sort[challenge2.Sort\\:\\:sort([I)].JML normal_behavior operation contract.0
contract=challenge2.Sort[challenge2.Sort\\:\\:sort([I)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "067337b5fd73cebec3e16a6bf273d10724503b43"))

(autoModeTime "2982")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "a,self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "8"))
(builtin "One Step Simplification" (formula "4"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "array2seqDef" (formula "9") (term "0,0,0,0,1") (inst "u=u"))
(rule "array2seqDef" (formula "9") (term "1,0,0,0,1") (inst "u=u"))
(rule "Class_invariant_axiom_for_challenge2_Sort" (formula "6") (ifseqformula "3"))
(rule "true_left" (formula "6"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_sort,savedHeapBefore_sort,_aBefore_sort"))
(builtin "One Step Simplification" (formula "8"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "sorted"))
(rule "assignment" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(builtin "Loop Invariant" (formula "8") (newnames "variant,b,heapBefore_LOOP,sortedBefore_LOOP,sorted_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
(branch "Invariant Initially Valid"
   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "8"))
)
(branch "Body Preserves Invariant"
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "impRight" (formula "10"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "thrownExc"))
   (rule "blockThrow" (formula "11") (term "1,0,0,1"))
   (rule "array2seqDef" (formula "8") (term "1") (inst "u=u"))
   (rule "narrowSelectArrayType" (formula "8") (term "2,1") (ifseqformula "2") (ifseqformula "10"))
   (rule "array2seqDef" (formula "8") (term "0") (inst "u=u"))
   (rule "array2seqDef" (formula "11") (term "0,1,1,0,1") (inst "u=u"))
   (rule "array2seqDef" (formula "11") (term "1,1,1,0,1") (inst "u=u"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "compound_assignment_1_new" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "methodCallEmpty" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "emptyModality" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "apply_eq_boolean_rigid" (formula "11") (term "0,0,1,0,0") (ifseqformula "8"))
   (rule "ifUnfold" (formula "11") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x"))
   (rule "compound_assignment_1_new" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "ifSplit" (formula "11"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "assignment" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "for_to_while" (formula "11") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "j"))
      (rule "assignment" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (builtin "Loop Invariant" (formula "11") (newnames "variant_0,b_0,heapBefore_LOOP_0,jBefore_LOOP,sortedBefore_LOOP_0,j_0,sorted_1,heap_After_LOOP_0,anon_heap_LOOP_0,o,f"))
      (branch "Invariant Initially Valid"
         (builtin "One Step Simplification" (formula "11"))
         (rule "wellFormedAnon" (formula "11") (term "1"))
         (rule "leq_literals" (formula "11") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0"))
         (rule "array2seqDef" (formula "11") (term "0,1") (inst "u=u"))
         (rule "array2seqDef" (formula "11") (term "1,1") (inst "u=u"))
         (rule "narrowSelectArrayType" (formula "11") (term "2,1,1") (ifseqformula "1") (ifseqformula "10"))
         (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "orRight" (formula "11"))
         (rule "inEqSimp_geqRight" (formula "11"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "12"))
         (rule "add_zero_right" (formula "1") (term "1"))
         (rule "inEqSimp_contradEq3" (formula "12") (ifseqformula "1"))
         (rule "times_zero_1" (formula "12") (term "1,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0"))
         (rule "qeq_literals" (formula "12") (term "0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "false_right" (formula "12"))
         (rule "arrayLengthNotNegative" (formula "8") (term "1,1"))
         (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
         (rule "qeq_literals" (formula "8") (term "0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "closeFalse" (formula "8"))
      )
      (branch "Body Preserves Invariant"
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "impRight" (formula "13"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "eqSymm" (formula "16") (term "1,0,0,1,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "10"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclarationAssign" (formula "16") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_0_1"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "exc_2"))
         (rule "assignment" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "thrownExc_1"))
         (rule "blockThrow" (formula "16") (term "1,0,0,1"))
         (rule "blockThrow" (formula "16") (term "1,0,0,1"))
         (rule "array2seqDef" (formula "12") (term "0") (inst "u=u"))
         (rule "array2seqDef" (formula "12") (term "1") (inst "u=u"))
         (rule "narrowSelectArrayType" (formula "12") (term "2,1") (ifseqformula "2") (ifseqformula "15"))
         (rule "array2seqDef" (formula "16") (term "0,1,0,1,1,0,1") (inst "u=u"))
         (rule "array2seqDef" (formula "16") (term "1,1,0,1,1,0,1") (inst "u=u"))
         (rule "boxToDiamond" (formula "1") (term "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "commute_or" (formula "10"))
         (rule "compound_less_than_comparison_2" (formula "12") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_2"))
         (rule "assignment" (formula "12") (term "1"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_1"))
         (rule "compound_subtraction_1" (formula "12") (term "1") (inst "#v=x_3"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_3"))
         (rule "assignment_read_length" (formula "12") (term "1"))
         (branch "Normal Execution (_a != null)"
            (builtin "One Step Simplification" (formula "13"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")))
            (rule "false_right" (formula "12"))
            (rule "assignmentSubtractionInt" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "translateJavaSubInt" (formula "12") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "12") (term "0,1,0"))
            (rule "mul_literals" (formula "12") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,1,0"))
            (rule "less_than_comparison_simple" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "methodCallEmpty" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "emptyModality" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "notRight" (formula "12"))
            (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_4"))
            (rule "compound_less_than_comparison_2" (formula "16") (term "1") (inst "#v1=x_6") (inst "#v0=x_5"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_5"))
            (rule "assignment" (formula "16") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_6"))
            (rule "compound_subtraction_1" (formula "16") (term "1") (inst "#v=x_7"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_7"))
            (rule "assignment_read_length" (formula "16") (term "1"))
            (branch "Normal Execution (_a != null)"
               (builtin "One Step Simplification" (formula "17"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")))
               (rule "false_right" (formula "16"))
               (rule "assignmentSubtractionInt" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "translateJavaSubInt" (formula "16") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "16") (term "0,1,0"))
               (rule "mul_literals" (formula "16") (term "1,0,1,0"))
               (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
               (rule "less_than_comparison_simple" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "replace_known_left" (formula "16") (term "0,0,1,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "arrayLengthIsAShort" (formula "8") (term "1,1"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "arrayLengthNotNegative" (formula "8") (term "1,1"))
               (rule "ifSplit" (formula "17"))
               (branch "if x_4 true"
                  (builtin "One Step Simplification" (formula "18"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "ifUnfold" (formula "17") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_8"))
                  (rule "compound_greater_than_comparison_2" (formula "17") (term "1") (inst "#v1=x_10") (inst "#v0=x_9"))
                  (rule "variableDeclarationAssign" (formula "17") (term "1"))
                  (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_9"))
                  (rule "assignment_array2" (formula "17") (term "1"))
                  (branch "Normal Execution (_a != null)"
                     (builtin "One Step Simplification" (formula "18"))
                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "16")))
                     (rule "orRight" (formula "17"))
                     (rule "pullOutSelect" (formula "19") (term "0,1,0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000101_1" (formula "19") (term "0,1,0"))
                     (rule "variableDeclarationAssign" (formula "19") (term "1"))
                     (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_10"))
                     (rule "eval_order_array_access5" (formula "19") (term "1") (inst "#v1=x_11") (inst "#ar1=x_arr"))
                     (rule "variableDeclarationAssign" (formula "19") (term "1"))
                     (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr"))
                     (rule "assignment" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "variableDeclarationAssign" (formula "19") (term "1"))
                     (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_11"))
                     (rule "assignmentAdditionInt" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "translateJavaAddInt" (formula "19") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "19") (term "0,1,0"))
                     (rule "assignment_array2" (formula "19") (term "1"))
                     (branch "Normal Execution (x_arr != null)"
                        (builtin "One Step Simplification" (formula "20"))
                        (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "16")))
                        (rule "orRight" (formula "19"))
                        (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=arr_1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000101_3" (formula "21") (term "0,1,0"))
                        (rule "greater_than_comparison_simple" (formula "21") (term "1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "ifSplit" (formula "21"))
                        (branch "if x_8 true"
                           (builtin "One Step Simplification" (formula "22"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "methodCallUnfoldArguments" (formula "22") (term "1"))
                           (rule "variableDeclarationAssign" (formula "22") (term "1"))
                           (rule "variableDeclaration" (formula "22") (term "1") (newnames "var"))
                           (rule "assignment" (formula "22") (term "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "variableDeclarationAssign" (formula "22") (term "1"))
                           (rule "variableDeclaration" (formula "22") (term "1") (newnames "var_1"))
                           (rule "assignment" (formula "22") (term "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "variableDeclarationAssign" (formula "22") (term "1"))
                           (rule "variableDeclaration" (formula "22") (term "1") (newnames "var_2"))
                           (rule "assignmentAdditionInt" (formula "22") (term "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "translateJavaAddInt" (formula "22") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
                           (builtin "Use Operation Contract" (formula "22") (newnames "heapBefore_swap,exc_0,heapAfter_swap,anon_heap_swap") (contract "challenge2.Sort[challenge2.Sort::swap([I,int,int)].JML normal_behavior operation contract.0"))
                           (branch "Post (swap)"
                              (builtin "One Step Simplification" (formula "24"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "replaceKnownSelect_taclet0000101_0" (formula "16") (term "0,0,0,1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000101_1" (formula "16") (term "0,0,0,1,1"))
                              (rule "replaceKnownSelect_taclet00000101_2" (formula "16") (term "0,0,1,0,1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000101_3" (formula "16") (term "0,0,1,0,1,1"))
                              (rule "andLeft" (formula "16"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "19"))
                              (rule "andLeft" (formula "20"))
                              (rule "eqSymm" (formula "18"))
                              (rule "eqSymm" (formula "19"))
                              (rule "blockEmpty" (formula "29") (term "1"))
                              (rule "assignment" (formula "29") (term "1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "blockEmpty" (formula "29") (term "1"))
                              (rule "array2seqDef" (formula "20") (term "1") (inst "u=u"))
                              (rule "array2seqDef" (formula "20") (term "0") (inst "u=u"))
                              (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "25")) (ifInst ""  (formula "6")))
                              (rule "replaceKnownSelect_taclet00000101_2" (formula "18") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000101_3" (formula "18") (term "2,0"))
                              (rule "eqSymm" (formula "19"))
                              (rule "hideAuxiliaryEq" (formula "19"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000000101_5" (formula "18") (term "1"))
                              (rule "elementOfUnion" (formula "18") (term "0,0"))
                              (rule "elementOfSingleton" (formula "18") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "25")) (ifInst ""  (formula "6")))
                              (rule "replaceKnownSelect_taclet0000101_0" (formula "19") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000101_1" (formula "19") (term "2,0"))
                              (rule "eqSymm" (formula "20"))
                              (rule "hideAuxiliaryEq" (formula "20"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000000101_7" (formula "19") (term "1"))
                              (rule "elementOfUnion" (formula "19") (term "0,0"))
                              (rule "elementOfSingleton" (formula "19") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "Class_invariant_axiom_for_challenge2_Sort" (formula "21") (ifseqformula "5"))
                              (rule "true_left" (formula "21"))
                              (rule "compound_assignment_op_plus" (formula "28") (term "1"))
                              (rule "compound_int_cast_expression" (formula "28") (term "1") (inst "#v=x"))
                              (rule "variableDeclarationAssign" (formula "28") (term "1"))
                              (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_12"))
                              (rule "remove_parentheses_right" (formula "28") (term "1"))
                              (rule "compound_addition_2" (formula "28") (term "1") (inst "#v1=x_14") (inst "#v0=x_13"))
                              (rule "variableDeclarationAssign" (formula "28") (term "1"))
                              (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_13"))
                              (rule "assignment" (formula "28") (term "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "variableDeclarationAssign" (formula "28") (term "1"))
                              (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_14"))
                              (rule "remove_parentheses_right" (formula "28") (term "1"))
                              (rule "assignment" (formula "28") (term "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "assignmentAdditionInt" (formula "28") (term "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "translateJavaAddInt" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "28") (term "1"))
                              (rule "assignment" (formula "28") (term "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "tryEmpty" (formula "28") (term "1"))
                              (rule "methodCallEmpty" (formula "28") (term "1"))
                              (rule "emptyModality" (formula "28") (term "1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "andRight" (formula "28") (userinteraction))
                              (branch "Case 1"
                                 (rule "andRight" (formula "28") (userinteraction))
                                 (branch "Case 1"
                                    (rule "inEqSimp_ltRight" (formula "25"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "26"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "27"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "6"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_leqRight" (formula "28"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                                 (branch "Case 2"
                                    (rule "seqPermSym" (formula "20") (userinteraction))
                                    (rule "seqPermSym" (formula "28") (userinteraction))
                                    (rule "seqPermSym" (formula "14") (userinteraction))
                                    (rule "pullOut" (formula "14") (term "1") (inst "sk=seqDef_0") (userinteraction))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "14") (userinteraction))
                                    (rule "seqPermTrans" (formula "15") (ifseqformula "21") (userinteraction))
                                    (rule "pullOut" (formula "30") (term "0") (inst "sk=seqDef_1") (userinteraction))
                                    (rule "cut" (inst "cutFormula=seqDef_1 = seqDef_0") (userinteraction))
                                    (branch "CUT: seqDef_1 = seqDef_0 TRUE"
                                       (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "5") (ifseqformula "27"))
                                       (rule "inEqSimp_ltRight" (formula "29"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_leqRight" (formula "30"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_ltRight" (formula "31"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "applyEq" (formula "32") (term "0") (ifseqformula "5"))
                                       (rule "close" (formula "32") (ifseqformula "28"))
                                    )
                                    (branch "CUT: seqDef_1 = seqDef_0 FALSE"
                                       (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "1") (userinteraction))
                                       (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "15") (userinteraction))
                                       (rule "eqSymm" (formula "24"))
                                       (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "4") (ifseqformula "27"))
                                       (rule "narrowSelectArrayType" (formula "24") (term "2,1") (ifseqformula "4") (ifseqformula "27"))
                                       (rule "inEqSimp_ltRight" (formula "31"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "30"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "31"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_leqRight" (formula "31"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "5"))
                                       (rule "close" (formula "32") (ifseqformula "20"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "28") (inst "sk=f_0"))
                                 (rule "allRight" (formula "28") (inst "sk=o_0"))
                                 (rule "orRight" (formula "28"))
                                 (rule "orRight" (formula "28"))
                                 (rule "inEqSimp_ltRight" (formula "27"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "27"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_ltRight" (formula "27"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_gtToGeq" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "inEqSimp_subsumption1" (formula "13") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "13") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                 (rule "qeq_literals" (formula "13") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=f_0_0"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=f_0_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,1,0,0,0,0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")) (ifInst ""  (formula "27")))
                                 (rule "replaceKnownSelect_taclet10000000101_8" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "cnf_rightDist" (formula "2") (term "0,0"))
                                 (rule "commute_or" (formula "2") (term "1,0,0"))
                                 (rule "cut_direct" (formula "26") (term "0,0"))
                                 (branch "CUT: o_0 = null TRUE"
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "false_right" (formula "27"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "closeTrue" (formula "27"))
                                 )
                                 (branch "CUT: o_0 = null FALSE"
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "notRight" (formula "27"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                    (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "closeTrue" (formula "28"))
                                 )
                              )
                           )
                           (branch "Exceptional Post (swap)"
                              (builtin "One Step Simplification" (formula "16"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "replaceKnownSelect_taclet0000101_0" (formula "16") (term "0,0,0,1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000101_1" (formula "16") (term "0,0,0,1,1"))
                              (rule "replaceKnownSelect_taclet00000101_2" (formula "16") (term "0,0,1,0,1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000101_3" (formula "16") (term "0,0,1,0,1,1"))
                              (rule "andLeft" (formula "16"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "19"))
                              (rule "notLeft" (formula "17"))
                              (rule "close" (formula "21") (ifseqformula "20"))
                           )
                           (branch "Pre (swap)"
                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")) (ifInst ""  (formula "6")))
                              (rule "wellFormedAnon" (formula "22") (term "1"))
                              (rule "wellFormedAnon" (formula "22") (term "0,1"))
                              (rule "replace_known_left" (formula "22") (term "1,1") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "3")) (ifInst ""  (formula "8")))
                              (rule "inEqSimp_leqRight" (formula "20"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_ltRight" (formula "20"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "20"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_ltRight" (formula "21"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_gtToGeq" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "6"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1"))
                              (rule "add_literals" (formula "22") (term "0,0,0,1,0,1"))
                              (rule "replace_known_left" (formula "22") (term "1,0,1") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0"))
                              (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1"))
                              (rule "times_zero_2" (formula "22") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "22") (term "0,0,1"))
                              (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0,0"))
                              (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "inEqSimp_subsumption1" (formula "16") (term "1") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "16") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "16") (term "0,0,1"))
                              (rule "qeq_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "15"))
                              (rule "leq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "13"))
                              (rule "leq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "Class_invariant_axiom_for_challenge2_Sort" (formula "17") (ifseqformula "5"))
                              (rule "closeTrue" (formula "17"))
                           )
                        )
                        (branch "if x_8 false"
                           (builtin "One Step Simplification" (formula "22"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "blockEmpty" (formula "22") (term "1"))
                           (rule "compound_assignment_op_plus" (formula "22") (term "1"))
                           (rule "compound_int_cast_expression" (formula "22") (term "1") (inst "#v=x"))
                           (rule "variableDeclarationAssign" (formula "22") (term "1"))
                           (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_12"))
                           (rule "remove_parentheses_right" (formula "22") (term "1"))
                           (rule "compound_addition_2" (formula "22") (term "1") (inst "#v1=x_14") (inst "#v0=x_13"))
                           (rule "variableDeclarationAssign" (formula "22") (term "1"))
                           (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_13"))
                           (rule "assignment" (formula "22") (term "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "variableDeclarationAssign" (formula "22") (term "1"))
                           (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_14"))
                           (rule "remove_parentheses_right" (formula "22") (term "1"))
                           (rule "assignment" (formula "22") (term "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "assignmentAdditionInt" (formula "22") (term "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "translateJavaAddInt" (formula "22") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "22") (term "1"))
                           (rule "assignment" (formula "22") (term "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "tryEmpty" (formula "22") (term "1"))
                           (rule "methodCallEmpty" (formula "22") (term "1"))
                           (rule "emptyModality" (formula "22") (term "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "eqSymm" (formula "22") (term "1,0,0,1"))
                           (rule "narrowSelectArrayType" (formula "22") (term "2,1,1,0") (ifseqformula "2") (ifseqformula "17"))
                           (rule "replace_known_left" (formula "22") (term "1,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_leqRight" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_ltRight" (formula "19"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "21"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "21"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_gtRight" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "6"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                           (rule "polySimp_elimOne" (formula "6") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0,0"))
                           (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "allRight" (formula "21") (inst "sk=f_0"))
                           (rule "allRight" (formula "21") (inst "sk=o_0"))
                           (rule "orRight" (formula "21"))
                           (rule "orRight" (formula "21"))
                           (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "15"))
                           (rule "leq_literals" (formula "4") (term "0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "inEqSimp_subsumption1" (formula "15") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "15") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1"))
                           (rule "qeq_literals" (formula "15") (term "0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "qeq_literals" (formula "4") (term "0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "13"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "19")))
                           (rule "applyEq" (formula "20") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "closeTrue" (formula "20"))
                        )
                     )
                     (branch "Null Reference (x_arr = null)"
                        (builtin "One Step Simplification" (formula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (x_arr != null, but x_11 Out of Bounds!)"
                        (builtin "One Step Simplification" (formula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                        (rule "blockThrow" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "commute_or" (formula "1"))
                        (rule "methodCallThrow" (formula "20") (term "1,0,0,1,0,0,1"))
                        (rule "tryCatchThrow" (formula "20") (term "1,0,0,1,0,0,1"))
                        (rule "ifElseUnfold" (formula "20") (term "1,0,0,1,0,0,1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "20") (term "1,0,0,1,0,0,1") (newnames "x_12"))
                        (rule "tryCatchThrow" (formula "20") (term "1,0,0,1"))
                        (rule "ifElseUnfold" (formula "20") (term "1,0,0,1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "20") (term "1,0,0,1") (newnames "x_13"))
                        (rule "equality_comparison_simple" (formula "20") (term "1,0,0,1"))
                        (rule "equality_comparison_simple" (formula "20") (term "1,0,0,1,1,0,0,1"))
                        (rule "throwUnfold" (formula "20") (term "1") (inst "#v0=a"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "a_1"))
                        (rule "instanceCreationAssignment" (formula "20") (term "1") (inst "#v0=a_2"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "a_2"))
                        (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "20") (term "1") (inst "#v0=a_3"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "a_3"))
                        (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "__NEW__"))
                        (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "20") (term "1") (inst "#v0=a_4"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "a_4"))
                        (rule "allocateInstance" (formula "20"))
                        (builtin "One Step Simplification" (formula "21"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                        (rule "wellFormedAnon" (formula "1") (term "0,0,1,0"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")) (ifInst ""  (formula "10")))
                        (rule "notLeft" (formula "1"))
                        (rule "orRight" (formula "16"))
                        (rule "orRight" (formula "16"))
                        (rule "blockEmpty" (formula "25") (term "1"))
                        (rule "assignment" (formula "25") (term "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "assignment_write_attribute_this" (formula "25") (term "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallWithinClass" (formula "25") (term "1"))
                        (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallSuper" (formula "25") (term "1"))
                        (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallSuper" (formula "25") (term "1"))
                        (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallSuper" (formula "25") (term "1"))
                        (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallSuper" (formula "25") (term "1"))
                        (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallSuper" (formula "25") (term "1"))
                        (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (rule "blockEmpty" (formula "25") (term "1"))
                        (rule "assignment_write_attribute_this" (formula "25") (term "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "assignment_write_attribute_this" (formula "25") (term "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (rule "blockEmpty" (formula "25") (term "1"))
                        (rule "methodCallReturnIgnoreResult" (formula "25") (term "1"))
                        (rule "methodCallReturn" (formula "25") (term "1"))
                        (rule "assignment" (formula "25") (term "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (rule "blockEmpty" (formula "25") (term "1"))
                        (rule "assignment" (formula "25") (term "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallSuper" (formula "25") (term "1"))
                        (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallSuper" (formula "25") (term "1"))
                        (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallSuper" (formula "25") (term "1"))
                        (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallSuper" (formula "25") (term "1"))
                        (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallSuper" (formula "25") (term "1"))
                        (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (rule "blockEmpty" (formula "25") (term "1"))
                        (rule "assignment_write_attribute_this" (formula "25") (term "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "assignment_write_attribute_this" (formula "25") (term "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (rule "blockEmpty" (formula "25") (term "1"))
                        (rule "assignment_write_attribute" (formula "25") (term "1"))
                        (branch "Normal Execution (a_2 != null)"
                           (builtin "One Step Simplification" (formula "26"))
                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "19")))
                           (rule "false_right" (formula "25"))
                           (rule "assignment" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "tryCatchThrow" (formula "25") (term "1"))
                           (rule "ifElseUnfold" (formula "25") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_14"))
                           (rule "equality_comparison_simple" (formula "25") (term "1"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "replace_known_right" (formula "25") (term "0,0,1,0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "ifElseSplit" (formula "25"))
                           (branch "if x_14 true"
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_14 false"
                              (builtin "One Step Simplification" (formula "26"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "ifElseSplit" (formula "25"))
                              (branch "if a_1 instanceof java.lang.Throwable true"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "true_left" (formula "1"))
                                 (rule "variableDeclaration" (formula "25") (term "1") (newnames "e"))
                                 (rule "delete_unnecessary_cast" (formula "25") (term "1"))
                                 (branch "Normal Execution (a_1 instanceof java.lang.Throwable)"
                                    (builtin "One Step Simplification" (formula "26"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "assignment" (formula "25") (term "1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "assignment" (formula "25") (term "1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "methodCallEmpty" (formula "25") (term "1"))
                                    (rule "emptyModality" (formula "25") (term "1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "replace_known_right" (formula "25") (term "0,0,1,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "ifElseSplit" (formula "25"))
                                    (branch "if x_13 true"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "if x_13 false"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "ifElseSplit" (formula "25"))
                                       (branch "if thrownExc_1 instanceof java.lang.Throwable true"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                          (rule "true_left" (formula "1"))
                                          (rule "variableDeclaration" (formula "25") (term "1") (newnames "e_1"))
                                          (rule "delete_unnecessary_cast" (formula "25") (term "1"))
                                          (branch "Normal Execution (thrownExc_1 instanceof java.lang.Throwable)"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "assignment" (formula "25") (term "1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "assignment" (formula "25") (term "1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "methodCallEmpty" (formula "25") (term "1"))
                                             (rule "emptyModality" (formula "25") (term "1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "replace_known_right" (formula "25") (term "0,0,1,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "ifElseSplit" (formula "25"))
                                             (branch "if x_12 true"
                                                (builtin "One Step Simplification" (formula "26"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "if x_12 false"
                                                (builtin "One Step Simplification" (formula "26"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "ifElseSplit" (formula "25"))
                                                (branch "if thrownExc instanceof java.lang.Throwable true"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "variableDeclaration" (formula "25") (term "1") (newnames "e_2"))
                                                   (rule "delete_unnecessary_cast" (formula "25") (term "1"))
                                                   (branch "Normal Execution (thrownExc instanceof java.lang.Throwable)"
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "assignment" (formula "25") (term "1"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "emptyModality" (formula "25") (term "1"))
                                                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "19")))
                                                      (rule "false_right" (formula "25"))
                                                      (rule "inEqSimp_ltRight" (formula "24"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0"))
                                                      (rule "mul_literals" (formula "4") (term "1,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "16") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "16") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                      (rule "qeq_literals" (formula "16") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "3") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "ClassCastException (!(thrownExc instanceof java.lang.Throwable))"
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "closeTrue" (formula "25"))
                                                   )
                                                )
                                                (branch "if thrownExc instanceof java.lang.Throwable false"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                          )
                                          (branch "ClassCastException (!(thrownExc_1 instanceof java.lang.Throwable))"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "closeTrue" (formula "25"))
                                          )
                                       )
                                       (branch "if thrownExc_1 instanceof java.lang.Throwable false"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch "ClassCastException (!(a_1 instanceof java.lang.Throwable))"
                                    (builtin "One Step Simplification" (formula "26"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "closeTrue" (formula "25"))
                                 )
                              )
                              (branch "if a_1 instanceof java.lang.Throwable false"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                        (branch "Null Reference (a_2 = null)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Null Reference (_a = null)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (_a != null, but j Out of Bounds!)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                     (rule "blockThrow" (formula "18") (term "1"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "commute_or" (formula "1"))
                     (rule "methodCallThrow" (formula "18") (term "1,0,0,1,0,0,1"))
                     (rule "tryCatchThrow" (formula "18") (term "1,0,0,1,0,0,1"))
                     (rule "ifElseUnfold" (formula "18") (term "1,0,0,1,0,0,1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "18") (term "1,0,0,1,0,0,1") (newnames "x_10"))
                     (rule "equality_comparison_simple" (formula "18") (term "1,0,0,1,0,0,1"))
                     (rule "tryCatchThrow" (formula "18") (term "1,0,0,1"))
                     (rule "ifElseUnfold" (formula "18") (term "1,0,0,1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "18") (term "1,0,0,1") (newnames "x_11"))
                     (rule "equality_comparison_simple" (formula "18") (term "1,0,0,1"))
                     (rule "throwUnfold" (formula "18") (term "1") (inst "#v0=a"))
                     (rule "variableDeclarationAssign" (formula "18") (term "1"))
                     (rule "variableDeclaration" (formula "18") (term "1") (newnames "a_1"))
                     (rule "instanceCreationAssignment" (formula "18") (term "1") (inst "#v0=a_2"))
                     (rule "variableDeclarationAssign" (formula "18") (term "1"))
                     (rule "variableDeclaration" (formula "18") (term "1") (newnames "a_2"))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "18") (term "1") (inst "#v0=a_3"))
                     (rule "variableDeclaration" (formula "18") (term "1") (newnames "a_3"))
                     (rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "variableDeclaration" (formula "18") (term "1") (newnames "__NEW__"))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "18") (term "1") (inst "#v0=a_4"))
                     (rule "variableDeclaration" (formula "18") (term "1") (newnames "a_4"))
                     (rule "allocateInstance" (formula "18"))
                     (builtin "One Step Simplification" (formula "19"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                     (rule "wellFormedAnon" (formula "1") (term "0,0,1,0"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")) (ifInst ""  (formula "10")))
                     (rule "notLeft" (formula "1"))
                     (rule "orRight" (formula "16"))
                     (rule "orRight" (formula "16"))
                     (rule "blockEmpty" (formula "23") (term "1"))
                     (rule "assignment" (formula "23") (term "1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "assignment_write_attribute_this" (formula "23") (term "1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallWithinClass" (formula "23") (term "1"))
                     (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallSuper" (formula "23") (term "1"))
                     (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallSuper" (formula "23") (term "1"))
                     (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallSuper" (formula "23") (term "1"))
                     (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallSuper" (formula "23") (term "1"))
                     (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallSuper" (formula "23") (term "1"))
                     (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallEmpty" (formula "23") (term "1"))
                     (rule "blockEmpty" (formula "23") (term "1"))
                     (rule "assignment_write_attribute_this" (formula "23") (term "1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "assignment_write_attribute_this" (formula "23") (term "1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallEmpty" (formula "23") (term "1"))
                     (rule "methodCallEmpty" (formula "23") (term "1"))
                     (rule "methodCallEmpty" (formula "23") (term "1"))
                     (rule "methodCallEmpty" (formula "23") (term "1"))
                     (rule "methodCallEmpty" (formula "23") (term "1"))
                     (rule "blockEmpty" (formula "23") (term "1"))
                     (rule "methodCallReturnIgnoreResult" (formula "23") (term "1"))
                     (rule "methodCallReturn" (formula "23") (term "1"))
                     (rule "assignment" (formula "23") (term "1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallEmpty" (formula "23") (term "1"))
                     (rule "blockEmpty" (formula "23") (term "1"))
                     (rule "assignment" (formula "23") (term "1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallSuper" (formula "23") (term "1"))
                     (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallSuper" (formula "23") (term "1"))
                     (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallSuper" (formula "23") (term "1"))
                     (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallSuper" (formula "23") (term "1"))
                     (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallSuper" (formula "23") (term "1"))
                     (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallEmpty" (formula "23") (term "1"))
                     (rule "blockEmpty" (formula "23") (term "1"))
                     (rule "assignment_write_attribute_this" (formula "23") (term "1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "assignment_write_attribute_this" (formula "23") (term "1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "methodCallEmpty" (formula "23") (term "1"))
                     (rule "methodCallEmpty" (formula "23") (term "1"))
                     (rule "methodCallEmpty" (formula "23") (term "1"))
                     (rule "methodCallEmpty" (formula "23") (term "1"))
                     (rule "methodCallEmpty" (formula "23") (term "1"))
                     (rule "blockEmpty" (formula "23") (term "1"))
                     (rule "assignment_write_attribute" (formula "23") (term "1"))
                     (branch "Normal Execution (a_2 != null)"
                        (builtin "One Step Simplification" (formula "24"))
                        (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "19")))
                        (rule "false_right" (formula "23"))
                        (rule "assignment" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "tryCatchThrow" (formula "23") (term "1"))
                        (rule "ifElseUnfold" (formula "23") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_12"))
                        (rule "equality_comparison_simple" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_right" (formula "23") (term "0,0,1,0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "ifElseSplit" (formula "23"))
                        (branch "if x_12 true"
                           (builtin "One Step Simplification" (formula "24"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_12 false"
                           (builtin "One Step Simplification" (formula "24"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "ifElseSplit" (formula "23"))
                           (branch "if a_1 instanceof java.lang.Throwable true"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "true_left" (formula "1"))
                              (rule "variableDeclaration" (formula "23") (term "1") (newnames "e"))
                              (rule "delete_unnecessary_cast" (formula "23") (term "1"))
                              (branch "Normal Execution (a_1 instanceof java.lang.Throwable)"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "assignment" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "assignment" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "methodCallEmpty" (formula "23") (term "1"))
                                 (rule "emptyModality" (formula "23") (term "1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "replace_known_right" (formula "23") (term "0,0,1,0") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "ifElseSplit" (formula "23"))
                                 (branch "if x_11 true"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_11 false"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "ifElseSplit" (formula "23"))
                                    (branch "if thrownExc_1 instanceof java.lang.Throwable true"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                       (rule "true_left" (formula "1"))
                                       (rule "variableDeclaration" (formula "23") (term "1") (newnames "e_1"))
                                       (rule "delete_unnecessary_cast" (formula "23") (term "1"))
                                       (branch "Normal Execution (thrownExc_1 instanceof java.lang.Throwable)"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "assignment" (formula "23") (term "1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "assignment" (formula "23") (term "1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "methodCallEmpty" (formula "23") (term "1"))
                                          (rule "emptyModality" (formula "23") (term "1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "replace_known_right" (formula "23") (term "0,0,1,0") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "ifElseSplit" (formula "23"))
                                          (branch "if x_10 true"
                                             (builtin "One Step Simplification" (formula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "if x_10 false"
                                             (builtin "One Step Simplification" (formula "24"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "ifElseSplit" (formula "23"))
                                             (branch "if thrownExc instanceof java.lang.Throwable true"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                                (rule "true_left" (formula "1"))
                                                (rule "variableDeclaration" (formula "23") (term "1") (newnames "e_2"))
                                                (rule "delete_unnecessary_cast" (formula "23") (term "1"))
                                                (branch "Normal Execution (thrownExc instanceof java.lang.Throwable)"
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "assignment" (formula "23") (term "1"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "emptyModality" (formula "23") (term "1"))
                                                   (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "19")))
                                                   (rule "false_right" (formula "23"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0"))
                                                   (rule "mul_literals" (formula "2") (term "1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "2") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_subsumption1" (formula "14") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "14") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                                   (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0,1"))
                                                   (rule "qeq_literals" (formula "14") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "13") (term "0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "closeFalse" (formula "13"))
                                                )
                                                (branch "ClassCastException (!(thrownExc instanceof java.lang.Throwable))"
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "closeTrue" (formula "23"))
                                                )
                                             )
                                             (branch "if thrownExc instanceof java.lang.Throwable false"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                       (branch "ClassCastException (!(thrownExc_1 instanceof java.lang.Throwable))"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "closeTrue" (formula "23"))
                                       )
                                    )
                                    (branch "if thrownExc_1 instanceof java.lang.Throwable false"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch "ClassCastException (!(a_1 instanceof java.lang.Throwable))"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "closeTrue" (formula "23"))
                              )
                           )
                           (branch "if a_1 instanceof java.lang.Throwable false"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (a_2 = null)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "if x_4 false"
                  (builtin "One Step Simplification" (formula "18"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (_a = null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (_a = null)"
            (builtin "One Step Simplification" (formula "13"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Use Case"
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "9"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "b_0_1"))
         (rule "blockEmpty" (formula "15") (term "1,0,1"))
         (rule "array2seqDef" (formula "11") (term "0") (inst "u=u"))
         (rule "array2seqDef" (formula "11") (term "1") (inst "u=u"))
         (rule "narrowSelectArrayType" (formula "11") (term "2,1") (ifseqformula "1") (ifseqformula "14"))
         (rule "commute_or" (formula "10"))
         (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_2"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_1"))
         (rule "compound_subtraction_1" (formula "15") (term "1") (inst "#v=x_3"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_3"))
         (rule "assignment_read_length" (formula "15") (term "1"))
         (branch "Normal Execution (_a != null)"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "14")))
            (rule "false_right" (formula "15"))
            (rule "assignmentSubtractionInt" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "15") (term "0,1,0"))
            (rule "mul_literals" (formula "15") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "15") (term "0,1,0"))
            (rule "less_than_comparison_simple" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "methodCallEmpty" (formula "15") (term "1"))
            (rule "emptyModality" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "impRight" (formula "15"))
            (rule "notLeft" (formula "1"))
            (rule "for_to_while" (formula "16") (term "1") (inst "#outerLabel=_label3") (inst "#innerLabel=_label2"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "k"))
            (rule "assignment" (formula "16") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (builtin "Loop Invariant" (formula "16") (newnames "variant_1,b_2,heapBefore_LOOP_1,kBefore_LOOP,k_0,heap_After_LOOP_1,anon_heap_LOOP_1,o,f"))
            (branch "Invariant Initially Valid"
               (builtin "One Step Simplification" (formula "16"))
               (rule "wellFormedAnon" (formula "16") (term "1"))
               (rule "wellFormedAnon" (formula "16") (term "0,1"))
               (rule "leq_literals" (formula "16") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "8")))
               (rule "inEqSimp_ltRight" (formula "12"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
               (rule "mul_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "array2seqDef" (formula "16") (term "1,1") (inst "u=u"))
               (rule "narrowSelectArrayType" (formula "16") (term "2,1,1") (ifseqformula "2") (ifseqformula "15"))
               (rule "array2seqDef" (formula "16") (term "0,1") (inst "u=u"))
               (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "inEqSimp_geqRight" (formula "16"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_contradEq3" (formula "12") (term "0") (ifseqformula "1"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,0"))
               (rule "qeq_literals" (formula "12") (term "0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
               (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
               (rule "polySimp_addComm0" (formula "12") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "polySimp_elimOne" (formula "12") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "11"))
               (rule "qeq_literals" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "closeFalse" (formula "12"))
            )
            (branch "Body Preserves Invariant"
               (builtin "One Step Simplification" (formula "18"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "impRight" (formula "18"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "eqSymm" (formula "21") (term "1,0,0,1,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "15"))
               (rule "inEqSimp_commuteLeq" (formula "14"))
               (rule "variableDeclarationAssign" (formula "1") (term "1"))
               (rule "variableDeclarationAssign" (formula "21") (term "1"))
               (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2_1"))
               (rule "variableDeclaration" (formula "21") (term "1") (newnames "exc_2"))
               (rule "assignment" (formula "21") (term "1"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "variableDeclaration" (formula "21") (term "1") (newnames "thrownExc_1"))
               (rule "blockThrow" (formula "21") (term "1,0,0,1"))
               (rule "array2seqDef" (formula "16") (term "0") (inst "u=u"))
               (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
               (rule "narrowSelectArrayType" (formula "16") (term "2,1") (ifseqformula "2") (ifseqformula "20"))
               (rule "array2seqDef" (formula "21") (term "0,1,0,1,1,0,1") (inst "u=u"))
               (rule "array2seqDef" (formula "21") (term "1,1,0,1,1,0,1") (inst "u=u"))
               (rule "boxToDiamond" (formula "1") (term "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "compound_less_than_comparison_2" (formula "16") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
               (rule "variableDeclarationAssign" (formula "16") (term "1"))
               (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_4"))
               (rule "assignment" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "variableDeclarationAssign" (formula "16") (term "1"))
               (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_5"))
               (rule "compound_subtraction_1" (formula "16") (term "1") (inst "#v=x_6"))
               (rule "variableDeclarationAssign" (formula "16") (term "1"))
               (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_6"))
               (rule "assignment_read_length" (formula "16") (term "1"))
               (branch "Normal Execution (_a != null)"
                  (builtin "One Step Simplification" (formula "17"))
                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "21")))
                  (rule "false_right" (formula "16"))
                  (rule "assignmentSubtractionInt" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "translateJavaSubInt" (formula "16") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "16") (term "0,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
                  (rule "less_than_comparison_simple" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "methodCallEmpty" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "emptyModality" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "notRight" (formula "16"))
                  (rule "ifUnfold" (formula "21") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_7"))
                  (rule "compound_less_than_comparison_2" (formula "21") (term "1") (inst "#v1=x_9") (inst "#v0=x_8"))
                  (rule "variableDeclarationAssign" (formula "21") (term "1"))
                  (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_8"))
                  (rule "assignment" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "variableDeclarationAssign" (formula "21") (term "1"))
                  (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_9"))
                  (rule "compound_subtraction_1" (formula "21") (term "1") (inst "#v=x_10"))
                  (rule "variableDeclarationAssign" (formula "21") (term "1"))
                  (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_10"))
                  (rule "assignment_read_length" (formula "21") (term "1"))
                  (branch "Normal Execution (_a != null)"
                     (builtin "One Step Simplification" (formula "22"))
                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "20")))
                     (rule "false_right" (formula "21"))
                     (rule "assignmentSubtractionInt" (formula "21") (term "1"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "translateJavaSubInt" (formula "21") (term "0,1,0"))
                     (rule "polySimp_elimSub" (formula "21") (term "0,1,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                     (rule "less_than_comparison_simple" (formula "21") (term "1"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "replace_known_left" (formula "21") (term "0,0,1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "arrayLengthIsAShort" (formula "8") (term "1,1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "arrayLengthNotNegative" (formula "8") (term "1,1"))
                     (rule "ifSplit" (formula "22"))
                     (branch "if x_7 true"
                        (builtin "One Step Simplification" (formula "23"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "ifUnfold" (formula "22") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_11"))
                        (rule "compound_greater_than_comparison_2" (formula "22") (term "1") (inst "#v1=x_13") (inst "#v0=x_12"))
                        (rule "variableDeclarationAssign" (formula "22") (term "1"))
                        (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_12"))
                        (rule "assignment_array2" (formula "22") (term "1"))
                        (branch "Normal Execution (_a != null)"
                           (builtin "One Step Simplification" (formula "23"))
                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "21")))
                           (rule "orRight" (formula "22"))
                           (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_0"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet000010201_1" (formula "24") (term "0,1,0"))
                           (rule "variableDeclarationAssign" (formula "24") (term "1"))
                           (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_13"))
                           (rule "eval_order_array_access5" (formula "24") (term "1") (inst "#v1=x_14") (inst "#ar1=x_arr"))
                           (rule "variableDeclarationAssign" (formula "24") (term "1"))
                           (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr"))
                           (rule "assignment" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "variableDeclarationAssign" (formula "24") (term "1"))
                           (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_14"))
                           (rule "assignmentAdditionInt" (formula "24") (term "1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "translateJavaAddInt" (formula "24") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,1,0"))
                           (rule "assignment_array2" (formula "24") (term "1"))
                           (branch "Normal Execution (x_arr != null)"
                              (builtin "One Step Simplification" (formula "25"))
                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "21")))
                              (rule "orRight" (formula "24"))
                              (rule "pullOutSelect" (formula "26") (term "0,1,0") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010201_3" (formula "26") (term "0,1,0"))
                              (rule "greater_than_comparison_simple" (formula "26") (term "1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "ifSplit" (formula "26"))
                              (branch "if x_11 true"
                                 (builtin "One Step Simplification" (formula "27"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "methodCallUnfoldArguments" (formula "27") (term "1"))
                                 (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                 (rule "variableDeclaration" (formula "27") (term "1") (newnames "var"))
                                 (rule "assignment" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                 (rule "variableDeclaration" (formula "27") (term "1") (newnames "var_1"))
                                 (rule "assignment" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                 (rule "variableDeclaration" (formula "27") (term "1") (newnames "var_2"))
                                 (rule "assignmentAdditionInt" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "translateJavaAddInt" (formula "27") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "27") (term "0,1,0"))
                                 (builtin "Use Operation Contract" (formula "27") (newnames "heapBefore_swap,exc_0,heapAfter_swap,anon_heap_swap") (contract "challenge2.Sort[challenge2.Sort::swap([I,int,int)].JML normal_behavior operation contract.0"))
                                 (branch "Post (swap)"
                                    (builtin "One Step Simplification" (formula "29"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "replaceKnownSelect_taclet000010201_0" (formula "20") (term "0,0,0,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000010201_1" (formula "20") (term "0,0,0,1,1"))
                                    (rule "replaceKnownSelect_taclet0000010201_2" (formula "20") (term "0,0,1,0,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000010201_3" (formula "20") (term "0,0,1,0,1,1"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "eqSymm" (formula "22"))
                                    (rule "eqSymm" (formula "23"))
                                    (rule "blockEmpty" (formula "34") (term "1"))
                                    (rule "array2seqDef" (formula "24") (term "1") (inst "u=u"))
                                    (rule "array2seqDef" (formula "24") (term "0") (inst "u=u"))
                                    (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=arr_2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "30")) (ifInst ""  (formula "6")))
                                    (rule "replaceKnownSelect_taclet0000010201_2" (formula "22") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000010201_3" (formula "22") (term "2,0"))
                                    (rule "eqSymm" (formula "23"))
                                    (rule "hideAuxiliaryEq" (formula "23"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000010201_5" (formula "22") (term "1"))
                                    (rule "elementOfUnion" (formula "22") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "22") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")) (ifInst ""  (formula "6")))
                                    (rule "replaceKnownSelect_taclet000010201_0" (formula "23") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000010201_1" (formula "23") (term "2,0"))
                                    (rule "eqSymm" (formula "24"))
                                    (rule "hideAuxiliaryEq" (formula "24"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000010201_7" (formula "23") (term "1"))
                                    (rule "elementOfUnion" (formula "23") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "23") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "Class_invariant_axiom_for_challenge2_Sort" (formula "25") (ifseqformula "5"))
                                    (rule "true_left" (formula "25"))
                                    (rule "compound_assignment_op_plus" (formula "33") (term "1"))
                                    (rule "compound_int_cast_expression" (formula "33") (term "1") (inst "#v=x"))
                                    (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                    (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_15"))
                                    (rule "remove_parentheses_right" (formula "33") (term "1"))
                                    (rule "compound_addition_2" (formula "33") (term "1") (inst "#v1=x_17") (inst "#v0=x_16"))
                                    (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                    (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_16"))
                                    (rule "assignment" (formula "33") (term "1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                    (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_17"))
                                    (rule "remove_parentheses_right" (formula "33") (term "1"))
                                    (rule "assignment" (formula "33") (term "1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "assignmentAdditionInt" (formula "33") (term "1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "translateJavaAddInt" (formula "33") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "33") (term "1"))
                                    (rule "assignment" (formula "33") (term "1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "tryEmpty" (formula "33") (term "1"))
                                    (rule "methodCallEmpty" (formula "33") (term "1"))
                                    (rule "emptyModality" (formula "33") (term "1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "andRight" (formula "33") (userinteraction))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "33") (userinteraction))
                                       (branch "Case 1"
                                          (rule "inEqSimp_ltRight" (formula "30"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_ltRight" (formula "31"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "27"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "31"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0"))
                                          (rule "mul_literals" (formula "32") (term "1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_geqRight" (formula "32"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "20"))
                                          (rule "leq_literals" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "seqPermTrans" (formula "24") (ifseqformula "18") (userinteraction))
                                          (rule "seqPermTrans" (formula "25") (ifseqformula "18") (userinteraction))
                                          (rule "seqPermSym" (formula "24") (userinteraction))
                                          (rule "seqPermSym" (formula "34") (userinteraction))
                                          (rule "pullOut" (formula "24") (term "0") (inst "sk=seqDef_0") (userinteraction))
                                          (rule "pullOut" (formula "35") (term "0") (inst "sk=seqDef_1") (userinteraction))
                                          (rule "cut" (inst "cutFormula=seqDef_1 = seqDef_0") (userinteraction))
                                          (branch "CUT: seqDef_1 = seqDef_0 TRUE"
                                             (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "5") (ifseqformula "32"))
                                             (rule "inEqSimp_ltRight" (formula "34"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "34"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "31"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "35"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "applyEq" (formula "24") (term "1") (ifseqformula "30"))
                                             (rule "applyEq" (formula "16") (term "1") (ifseqformula "6"))
                                             (rule "applyEq" (formula "30") (term "0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "5"))
                                             (rule "close" (formula "35") (ifseqformula "30"))
                                          )
                                          (branch "CUT: seqDef_1 = seqDef_0 FALSE"
                                             (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1") (userinteraction))
                                             (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "25") (userinteraction))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "28") (inst "iv=iv") (userinteraction))
                                             (rule "lenOfSeqDef" (formula "28") (term "0,0"))
                                             (rule "eqSymm" (formula "28") (term "0"))
                                             (rule "polySimp_elimSub" (formula "28") (term "1,1,0"))
                                             (rule "times_zero_2" (formula "28") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "28") (term "1,1,0"))
                                             (rule "lenOfSeqDef" (formula "28") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimSub" (formula "28") (term "1,1,1,0,0,1"))
                                             (rule "mul_literals" (formula "28") (term "1,1,1,1,0,0,1"))
                                             (rule "add_zero_right" (formula "28") (term "1,1,1,0,0,1"))
                                             (rule "getOfSeqDef" (formula "28") (term "1,1,0,1"))
                                             (rule "castDel" (formula "28") (term "1,1,1,0,1"))
                                             (rule "castDel" (formula "28") (term "2,1,1,0,1"))
                                             (rule "add_zero_right" (formula "28") (term "0,2,1,1,1,0,1"))
                                             (rule "polySimp_elimSub" (formula "28") (term "1,1,0,1,1,0,1"))
                                             (rule "times_zero_2" (formula "28") (term "1,1,1,0,1,1,0,1"))
                                             (rule "add_zero_right" (formula "28") (term "1,1,0,1,1,0,1"))
                                             (rule "getOfSeqDef" (formula "28") (term "0,1,0,1"))
                                             (rule "castDel" (formula "28") (term "1,0,1,0,1"))
                                             (rule "castDel" (formula "28") (term "2,0,1,0,1"))
                                             (rule "add_zero_right" (formula "28") (term "0,2,1,0,1,0,1"))
                                             (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0,1,0,1"))
                                             (rule "mul_literals" (formula "28") (term "1,1,1,0,0,1,0,1"))
                                             (rule "add_zero_right" (formula "28") (term "1,1,0,0,1,0,1"))
                                             (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "4") (ifseqformula "32"))
                                             (rule "lenOfSeqDef" (formula "28") (term "0,0"))
                                             (rule "polySimp_elimSub" (formula "28") (term "1,0,0"))
                                             (rule "times_zero_2" (formula "28") (term "1,1,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "allRight" (formula "28") (inst "sk=iv_0"))
                                             (rule "impRight" (formula "28"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "1")))
                                             (rule "inEqSimp_ltRight" (formula "31"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "37"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "37"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "36"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "37"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                             (rule "add_literals" (formula "9") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0"))
                                             (rule "eqSymm" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,0,1"))
                                             (rule "narrowSelectArrayType" (formula "34") (term "1,1") (ifseqformula "10") (ifseqformula "37"))
                                             (rule "inEqSimp_ltToLeq" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0"))
                                             (rule "eqSymm" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1"))
                                             (rule "eqSymm" (formula "34"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "closeTrue" (formula "34"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "33") (inst "sk=f_0"))
                                       (rule "allRight" (formula "33") (inst "sk=o_0"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "inEqSimp_leqRight" (formula "31"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_ltRight" (formula "32"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "32"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "31"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_ltRight" (formula "28"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0"))
                                       (rule "qeq_literals" (formula "20") (term "0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "18"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "pullOutSelect" (formula "30") (term "1") (inst "selectSK=f_0_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=f_0_1"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                       (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "12") (term "0,0"))
                                       (rule "add_zero_left" (formula "12") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                       (rule "mul_literals" (formula "12") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "12") (term "0"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_2"))
                                       (rule "simplifySelectOfAnon" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                       (rule "replaceKnownSelect_taclet1000000010201_9" (formula "2") (term "0"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "5"))
                                       (rule "times_zero_1" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "cnf_rightDist" (formula "1") (term "0,0"))
                                       (rule "commute_or" (formula "1") (term "1,0,0"))
                                       (rule "cut_direct" (formula "33") (term "0,0"))
                                       (branch "CUT: o_0 = null TRUE"
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "CUT: o_0 = null FALSE"
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "notRight" (formula "34"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")) (ifInst ""  (formula "35")))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                    )
                                 )
                                 (branch "Exceptional Post (swap)"
                                    (builtin "One Step Simplification" (formula "29"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "replaceKnownSelect_taclet000010201_0" (formula "20") (term "0,0,0,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000010201_1" (formula "20") (term "0,0,0,1,1"))
                                    (rule "replaceKnownSelect_taclet0000010201_2" (formula "20") (term "0,0,1,0,1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000010201_3" (formula "20") (term "0,0,1,0,1,1"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "close" (formula "25") (ifseqformula "24"))
                                 )
                                 (branch "Pre (swap)"
                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "6")))
                                    (rule "wellFormedAnon" (formula "27") (term "1"))
                                    (rule "wellFormedAnon" (formula "27") (term "0,1"))
                                    (rule "wellFormedAnon" (formula "27") (term "0,0,1"))
                                    (rule "replace_known_left" (formula "27") (term "1,0,1") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "3")) (ifInst ""  (formula "8")) (ifInst ""  (formula "15")))
                                    (rule "inEqSimp_leqRight" (formula "25"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "26"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "26"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltRight" (formula "21"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "6"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,1"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,1"))
                                    (rule "replace_known_left" (formula "26") (term "1,0,1") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0"))
                                    (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1"))
                                    (rule "times_zero_2" (formula "26") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                    (rule "replace_known_left" (formula "26") (term "0,1") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0,0"))
                                    (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                    (rule "qeq_literals" (formula "20") (term "0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "19"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "11") (term "0,0"))
                                    (rule "add_zero_left" (formula "11") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                    (rule "mul_literals" (formula "11") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "11") (term "0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "2"))
                                    (rule "times_zero_1" (formula "18") (term "0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                    (rule "mul_literals" (formula "18") (term "1"))
                                    (rule "Class_invariant_axiom_for_challenge2_Sort" (formula "23") (ifseqformula "7"))
                                    (rule "closeTrue" (formula "23"))
                                 )
                              )
                              (branch "if x_11 false"
                                 (builtin "One Step Simplification" (formula "27"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "blockEmpty" (formula "27") (term "1"))
                                 (rule "compound_assignment_op_plus" (formula "27") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "27") (term "1") (inst "#v=x"))
                                 (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                 (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_15"))
                                 (rule "remove_parentheses_right" (formula "27") (term "1"))
                                 (rule "compound_addition_2" (formula "27") (term "1") (inst "#v1=x_17") (inst "#v0=x_16"))
                                 (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                 (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_16"))
                                 (rule "assignment" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                 (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_17"))
                                 (rule "remove_parentheses_right" (formula "27") (term "1"))
                                 (rule "assignment" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "assignmentAdditionInt" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "translateJavaAddInt" (formula "27") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "27") (term "0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "27") (term "1"))
                                 (rule "assignment" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "tryEmpty" (formula "27") (term "1"))
                                 (rule "methodCallEmpty" (formula "27") (term "1"))
                                 (rule "emptyModality" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "eqSymm" (formula "27") (term "1,0,0,1"))
                                 (rule "narrowSelectArrayType" (formula "27") (term "2,1,1,0") (ifseqformula "2") (ifseqformula "22"))
                                 (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_leqRight" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_ltRight" (formula "26"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "25"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "25"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_ltRight" (formula "22"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_gtRight" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_subsumption1" (formula "22") (term "0") (ifseqformula "17"))
                                 (rule "leq_literals" (formula "22") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "allRight" (formula "22") (inst "sk=f_0"))
                                 (rule "allRight" (formula "22") (inst "sk=o_0"))
                                 (rule "orRight" (formula "22"))
                                 (rule "orRight" (formula "22"))
                                 (rule "pullOutSelect" (formula "24") (term "1") (inst "selectSK=f_0_0"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                 (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=f_0_1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "25")))
                                 (rule "replaceKnownSelect_taclet10000010201_4" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "closeTrue" (formula "26"))
                              )
                           )
                           (branch "Null Reference (x_arr = null)"
                              (builtin "One Step Simplification" (formula "25"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (x_arr != null, but x_14 Out of Bounds!)"
                              (builtin "One Step Simplification" (formula "25"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                              (rule "blockThrow" (formula "25") (term "1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "commute_or" (formula "1"))
                              (rule "methodCallThrow" (formula "25") (term "1,0,0,1,0,0,1"))
                              (rule "tryCatchThrow" (formula "25") (term "1,0,0,1,0,0,1"))
                              (rule "ifElseUnfold" (formula "25") (term "1,0,0,1,0,0,1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "25") (term "1,0,0,1,0,0,1") (newnames "x_15"))
                              (rule "tryCatchThrow" (formula "25") (term "1,0,0,1"))
                              (rule "ifElseUnfold" (formula "25") (term "1,0,0,1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "25") (term "1,0,0,1") (newnames "x_16"))
                              (rule "equality_comparison_simple" (formula "25") (term "1,0,0,1"))
                              (rule "equality_comparison_simple" (formula "25") (term "1,0,0,1,1,0,0,1"))
                              (rule "throwUnfold" (formula "25") (term "1") (inst "#v0=a"))
                              (rule "variableDeclarationAssign" (formula "25") (term "1"))
                              (rule "variableDeclaration" (formula "25") (term "1") (newnames "a_1"))
                              (rule "instanceCreationAssignment" (formula "25") (term "1") (inst "#v0=a_2"))
                              (rule "variableDeclarationAssign" (formula "25") (term "1"))
                              (rule "variableDeclaration" (formula "25") (term "1") (newnames "a_2"))
                              (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "25") (term "1") (inst "#v0=a_3"))
                              (rule "variableDeclaration" (formula "25") (term "1") (newnames "a_3"))
                              (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "variableDeclaration" (formula "25") (term "1") (newnames "__NEW__"))
                              (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "25") (term "1") (inst "#v0=a_4"))
                              (rule "variableDeclaration" (formula "25") (term "1") (newnames "a_4"))
                              (rule "allocateInstance" (formula "25"))
                              (builtin "One Step Simplification" (formula "26"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                              (rule "wellFormedAnon" (formula "1") (term "0,0,1,0"))
                              (rule "wellFormedAnon" (formula "1") (term "0,0,0,1,0"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")) (ifInst ""  (formula "13")) (ifInst ""  (formula "17")))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "20"))
                              (rule "orRight" (formula "20"))
                              (rule "orRight" (formula "20"))
                              (rule "blockEmpty" (formula "31") (term "1"))
                              (rule "assignment" (formula "31") (term "1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallWithinClass" (formula "31") (term "1"))
                              (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallSuper" (formula "31") (term "1"))
                              (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallSuper" (formula "31") (term "1"))
                              (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallSuper" (formula "31") (term "1"))
                              (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallSuper" (formula "31") (term "1"))
                              (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallSuper" (formula "31") (term "1"))
                              (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                              (rule "blockEmpty" (formula "31") (term "1"))
                              (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                              (rule "blockEmpty" (formula "31") (term "1"))
                              (rule "methodCallReturnIgnoreResult" (formula "31") (term "1"))
                              (rule "methodCallReturn" (formula "31") (term "1"))
                              (rule "assignment" (formula "31") (term "1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                              (rule "blockEmpty" (formula "31") (term "1"))
                              (rule "assignment" (formula "31") (term "1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallSuper" (formula "31") (term "1"))
                              (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallSuper" (formula "31") (term "1"))
                              (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallSuper" (formula "31") (term "1"))
                              (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallSuper" (formula "31") (term "1"))
                              (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallSuper" (formula "31") (term "1"))
                              (rule "methodBodyExpand" (formula "31") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                              (rule "blockEmpty" (formula "31") (term "1"))
                              (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "assignment_write_attribute_this" (formula "31") (term "1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                              (rule "methodCallEmpty" (formula "31") (term "1"))
                              (rule "blockEmpty" (formula "31") (term "1"))
                              (rule "assignment_write_attribute" (formula "31") (term "1"))
                              (branch "Normal Execution (a_2 != null)"
                                 (builtin "One Step Simplification" (formula "32"))
                                 (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "24")))
                                 (rule "false_right" (formula "31"))
                                 (rule "assignment" (formula "31") (term "1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "tryCatchThrow" (formula "31") (term "1"))
                                 (rule "ifElseUnfold" (formula "31") (term "1") (inst "#boolv=x"))
                                 (rule "variableDeclaration" (formula "31") (term "1") (newnames "x_17"))
                                 (rule "equality_comparison_simple" (formula "31") (term "1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "replace_known_right" (formula "31") (term "0,0,1,0") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "ifElseSplit" (formula "31"))
                                 (branch "if x_17 true"
                                    (builtin "One Step Simplification" (formula "32"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_17 false"
                                    (builtin "One Step Simplification" (formula "32"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "ifElseSplit" (formula "31"))
                                    (branch "if a_1 instanceof java.lang.Throwable true"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                       (rule "true_left" (formula "1"))
                                       (rule "variableDeclaration" (formula "31") (term "1") (newnames "e"))
                                       (rule "delete_unnecessary_cast" (formula "31") (term "1"))
                                       (branch "Normal Execution (a_1 instanceof java.lang.Throwable)"
                                          (builtin "One Step Simplification" (formula "32"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "assignment" (formula "31") (term "1"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "assignment" (formula "31") (term "1"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "methodCallEmpty" (formula "31") (term "1"))
                                          (rule "emptyModality" (formula "31") (term "1"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "replace_known_right" (formula "31") (term "0,0,1,0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "ifElseSplit" (formula "31"))
                                          (branch "if x_16 true"
                                             (builtin "One Step Simplification" (formula "32"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "if x_16 false"
                                             (builtin "One Step Simplification" (formula "32"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "ifElseSplit" (formula "31"))
                                             (branch "if thrownExc_1 instanceof java.lang.Throwable true"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                                (rule "true_left" (formula "1"))
                                                (rule "variableDeclaration" (formula "31") (term "1") (newnames "e_1"))
                                                (rule "delete_unnecessary_cast" (formula "31") (term "1"))
                                                (branch "Normal Execution (thrownExc_1 instanceof java.lang.Throwable)"
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "assignment" (formula "31") (term "1"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "assignment" (formula "31") (term "1"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "methodCallEmpty" (formula "31") (term "1"))
                                                   (rule "emptyModality" (formula "31") (term "1"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "replace_known_right" (formula "31") (term "0,0,1,0") (ifseqformula "24"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "ifElseSplit" (formula "31"))
                                                   (branch "if x_15 true"
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "if x_15 false"
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "ifElseSplit" (formula "31"))
                                                      (branch "if thrownExc instanceof java.lang.Throwable true"
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "variableDeclaration" (formula "31") (term "1") (newnames "e_2"))
                                                         (rule "delete_unnecessary_cast" (formula "31") (term "1"))
                                                         (branch "Normal Execution (thrownExc instanceof java.lang.Throwable)"
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "assignment" (formula "31") (term "1"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "emptyModality" (formula "31") (term "1"))
                                                            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "24")))
                                                            (rule "false_right" (formula "31"))
                                                            (rule "inEqSimp_ltRight" (formula "25"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltRight" (formula "30"))
                                                            (rule "times_zero_1" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "29"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0"))
                                                            (rule "mul_literals" (formula "4") (term "1,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                            (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "20") (term "0,0"))
                                                            (rule "qeq_literals" (formula "20") (term "0"))
                                                            (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "1") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "4") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "4") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "18"))
                                                            (rule "qeq_literals" (formula "3") (term "0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                         (branch "ClassCastException (!(thrownExc instanceof java.lang.Throwable))"
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "closeTrue" (formula "31"))
                                                         )
                                                      )
                                                      (branch "if thrownExc instanceof java.lang.Throwable false"
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                )
                                                (branch "ClassCastException (!(thrownExc_1 instanceof java.lang.Throwable))"
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "closeTrue" (formula "31"))
                                                )
                                             )
                                             (branch "if thrownExc_1 instanceof java.lang.Throwable false"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                       (branch "ClassCastException (!(a_1 instanceof java.lang.Throwable))"
                                          (builtin "One Step Simplification" (formula "32"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "closeTrue" (formula "31"))
                                       )
                                    )
                                    (branch "if a_1 instanceof java.lang.Throwable false"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch "Null Reference (a_2 = null)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                        (branch "Null Reference (_a = null)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (_a != null, but k Out of Bounds!)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                           (rule "blockThrow" (formula "23") (term "1"))
                           (rule "commute_or" (formula "1"))
                           (rule "tryCatchThrow" (formula "23") (term "1,0,0,1"))
                           (rule "ifElseUnfold" (formula "23") (term "1,0,0,1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "23") (term "1,0,0,1") (newnames "x_13"))
                           (rule "methodCallThrow" (formula "23") (term "1,0,0,1,0,0,1"))
                           (rule "tryCatchThrow" (formula "23") (term "1,0,0,1,0,0,1"))
                           (rule "ifElseUnfold" (formula "23") (term "1,0,0,1,0,0,1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "23") (term "1,0,0,1,0,0,1") (newnames "x_14"))
                           (rule "equality_comparison_simple" (formula "23") (term "1,0,0,1,0,0,1"))
                           (rule "equality_comparison_simple" (formula "23") (term "1,0,0,1"))
                           (rule "throwUnfold" (formula "23") (term "1") (inst "#v0=a"))
                           (rule "variableDeclarationAssign" (formula "23") (term "1"))
                           (rule "variableDeclaration" (formula "23") (term "1") (newnames "a_1"))
                           (rule "instanceCreationAssignment" (formula "23") (term "1") (inst "#v0=a_2"))
                           (rule "variableDeclarationAssign" (formula "23") (term "1"))
                           (rule "variableDeclaration" (formula "23") (term "1") (newnames "a_2"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "23") (term "1") (inst "#v0=a_3"))
                           (rule "variableDeclaration" (formula "23") (term "1") (newnames "a_3"))
                           (rule "methodBodyExpand" (formula "23") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "variableDeclaration" (formula "23") (term "1") (newnames "__NEW__"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "23") (term "1") (inst "#v0=a_4"))
                           (rule "variableDeclaration" (formula "23") (term "1") (newnames "a_4"))
                           (rule "allocateInstance" (formula "23"))
                           (builtin "One Step Simplification" (formula "24"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                           (rule "wellFormedAnon" (formula "1") (term "0,0,1,0"))
                           (rule "wellFormedAnon" (formula "1") (term "0,0,0,1,0"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "17")))
                           (rule "notLeft" (formula "1"))
                           (rule "orRight" (formula "20"))
                           (rule "orRight" (formula "20"))
                           (rule "orRight" (formula "20"))
                           (rule "blockEmpty" (formula "29") (term "1"))
                           (rule "assignment" (formula "29") (term "1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallWithinClass" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "blockEmpty" (formula "29") (term "1"))
                           (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "blockEmpty" (formula "29") (term "1"))
                           (rule "methodCallReturnIgnoreResult" (formula "29") (term "1"))
                           (rule "methodCallReturn" (formula "29") (term "1"))
                           (rule "assignment" (formula "29") (term "1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "blockEmpty" (formula "29") (term "1"))
                           (rule "assignment" (formula "29") (term "1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "blockEmpty" (formula "29") (term "1"))
                           (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "blockEmpty" (formula "29") (term "1"))
                           (rule "assignment_write_attribute" (formula "29") (term "1"))
                           (branch "Normal Execution (a_2 != null)"
                              (builtin "One Step Simplification" (formula "30"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "24")))
                              (rule "false_right" (formula "29"))
                              (rule "assignment" (formula "29") (term "1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "tryCatchThrow" (formula "29") (term "1"))
                              (rule "ifElseUnfold" (formula "29") (term "1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_15"))
                              (rule "equality_comparison_simple" (formula "29") (term "1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "replace_known_right" (formula "29") (term "0,0,1,0") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "ifElseSplit" (formula "29"))
                              (branch "if x_15 true"
                                 (builtin "One Step Simplification" (formula "30"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_15 false"
                                 (builtin "One Step Simplification" (formula "30"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "ifElseSplit" (formula "29"))
                                 (branch "if a_1 instanceof java.lang.Throwable true"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                    (rule "true_left" (formula "1"))
                                    (rule "variableDeclaration" (formula "29") (term "1") (newnames "e"))
                                    (rule "delete_unnecessary_cast" (formula "29") (term "1"))
                                    (branch "Normal Execution (a_1 instanceof java.lang.Throwable)"
                                       (builtin "One Step Simplification" (formula "30"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "assignment" (formula "29") (term "1"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "assignment" (formula "29") (term "1"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "methodCallEmpty" (formula "29") (term "1"))
                                       (rule "emptyModality" (formula "29") (term "1"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "replace_known_right" (formula "29") (term "0,0,1,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "ifElseSplit" (formula "29"))
                                       (branch "if x_13 true"
                                          (builtin "One Step Simplification" (formula "30"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "if x_13 false"
                                          (builtin "One Step Simplification" (formula "30"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "ifElseSplit" (formula "29"))
                                          (branch "if thrownExc_1 instanceof java.lang.Throwable true"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                             (rule "true_left" (formula "1"))
                                             (rule "variableDeclaration" (formula "29") (term "1") (newnames "e_1"))
                                             (rule "delete_unnecessary_cast" (formula "29") (term "1"))
                                             (branch "Normal Execution (thrownExc_1 instanceof java.lang.Throwable)"
                                                (builtin "One Step Simplification" (formula "30"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "assignment" (formula "29") (term "1"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "assignment" (formula "29") (term "1"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "methodCallEmpty" (formula "29") (term "1"))
                                                (rule "emptyModality" (formula "29") (term "1"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "replace_known_right" (formula "29") (term "0,0,1,0") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "ifElseSplit" (formula "29"))
                                                (branch "if x_14 true"
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "if x_14 false"
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "ifElseSplit" (formula "29"))
                                                   (branch "if thrownExc instanceof java.lang.Throwable true"
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "variableDeclaration" (formula "29") (term "1") (newnames "e_2"))
                                                      (rule "delete_unnecessary_cast" (formula "29") (term "1"))
                                                      (branch "Normal Execution (thrownExc instanceof java.lang.Throwable)"
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "assignment" (formula "29") (term "1"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "emptyModality" (formula "29") (term "1"))
                                                         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "24")))
                                                         (rule "false_right" (formula "29"))
                                                         (rule "inEqSimp_ltRight" (formula "25"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "4"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0"))
                                                         (rule "mul_literals" (formula "3") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "3") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                         (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "19") (term "0,0"))
                                                         (rule "qeq_literals" (formula "19") (term "0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "18") (term "0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "closeFalse" (formula "18"))
                                                      )
                                                      (branch "ClassCastException (!(thrownExc instanceof java.lang.Throwable))"
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "closeTrue" (formula "29"))
                                                      )
                                                   )
                                                   (branch "if thrownExc instanceof java.lang.Throwable false"
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                             )
                                             (branch "ClassCastException (!(thrownExc_1 instanceof java.lang.Throwable))"
                                                (builtin "One Step Simplification" (formula "30"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "closeTrue" (formula "29"))
                                             )
                                          )
                                          (branch "if thrownExc_1 instanceof java.lang.Throwable false"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                    (branch "ClassCastException (!(a_1 instanceof java.lang.Throwable))"
                                       (builtin "One Step Simplification" (formula "30"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "closeTrue" (formula "29"))
                                    )
                                 )
                                 (branch "if a_1 instanceof java.lang.Throwable false"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Null Reference (a_2 = null)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "if x_7 false"
                        (builtin "One Step Simplification" (formula "23"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Null Reference (_a = null)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (_a = null)"
                  (builtin "One Step Simplification" (formula "17"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Use Case"
               (builtin "One Step Simplification" (formula "13"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "inEqSimp_commuteLeq" (formula "14"))
               (rule "inEqSimp_commuteLeq" (formula "13"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "b_2_1"))
               (rule "array2seqDef" (formula "15") (term "0") (inst "u=u"))
               (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
               (rule "narrowSelectArrayType" (formula "15") (term "2,1") (ifseqformula "1") (ifseqformula "19"))
               (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_4"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_5"))
               (rule "compound_subtraction_1" (formula "20") (term "1") (inst "#v=x_6"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_6"))
               (rule "assignment_read_length" (formula "20") (term "1"))
               (branch "Normal Execution (_a != null)"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
                  (rule "false_right" (formula "20"))
                  (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                  (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                  (rule "less_than_comparison_simple" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallEmpty" (formula "20") (term "1"))
                  (rule "emptyModality" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "impRight" (formula "20"))
                  (rule "notLeft" (formula "1"))
                  (rule "tryEmpty" (formula "21") (term "1"))
                  (rule "methodCallEmpty" (formula "21") (term "1"))
                  (rule "emptyModality" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "narrowSelectArrayType" (formula "21") (term "2,1") (ifseqformula "1") (ifseqformula "20"))
                  (rule "close" (formula "21") (ifseqformula "15"))
               )
               (branch "Null Reference (_a = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (_a = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Use Case"
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "b_1"))
   (rule "array2seqDef" (formula "7") (term "0") (inst "u=u"))
   (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
   (rule "narrowSelectArrayType" (formula "7") (term "2,1") (ifseqformula "1") (ifseqformula "9"))
   (rule "compound_assignment_1_new" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "emptyModality" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "impRight" (formula "10"))
   (rule "methodCallEmpty" (formula "11") (term "1"))
   (rule "tryEmpty" (formula "11") (term "1"))
   (rule "emptyModality" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "narrowSelectArrayType" (formula "11") (term "2,1,0") (ifseqformula "2") (ifseqformula "10"))
   (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "Class_invariant_axiom_for_challenge2_Sort" (formula "11") (ifseqformula "4"))
   (rule "closeTrue" (formula "11"))
)
)

}
